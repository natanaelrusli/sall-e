import React, { useState, useEffect } from 'react'
import { Loader, Card, FormField } from '../../components'

import './index.scss'

const RenderCards = ({ data, title }) => {
  if(data?.length > 0) return data.map((post) => <Card key={post._id} {...post} />)

  return (
    <h2 className='cards__text'>
      { title }
    </h2>
  )
}

function Home() {
  const [loading, setLoading] = useState(false)
  const [allPosts, setAllPosts] = useState(null)
  const [searchResults, setSearchResults] = useState(null)
  const [searchTimeout, setSearchTimeout] = useState(null)

  const [searchText, setSearchText] = useState('')

  useEffect(() => {
    loadPosts()
  }, [])

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout)
    setSearchText(e.target.value)

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLocaleLowerCase()))
  
        setSearchResults(searchResult)
      }, 500)
    )
  }

  const loadPosts = async () => {
    setLoading(true)

    try {
      const response = await fetch('http://localhost:8080/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      })

      if (response.ok) {
        const result = await response.json()

        setAllPosts(result.data.reverse()) 
      }

    } catch (error) {
      alert(error)
    } finally {
      setLoading(false)
    }
  }

  return (
    <section className='home'>
      <div>
        <h1 className='home__header-title'>The Community Showcase</h1>
        <p className='home__header-caption'>
          Browse through a collection of imaginative and visually stunning images generated by DALL-E AI
        </p>
      </div>

      <div className='mt-16'>
        <FormField
          labelName='Search Posts'
          type='text'
          name='text'
          placeholder='Search posts'
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className='mt-10'>
        {
          loading ? (
            <div className='flex justify-center items-center'>
              <Loader />
            </div>
          ) : (
            <>
              {
                searchText && (
                  <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                    Showing results for <span className='text-[#222328]'>{ searchText }</span>
                  </h2>
                )
              }
              <div className='cards'>
                {
                  searchText !== '' ? (
                    <RenderCards 
                      data={searchResults}
                      title='No search results found'
                    />
                  ) : (
                    <RenderCards
                      data={allPosts}
                      title='No posts found!'
                    />
                  )
                }
              </div>
            </>
          )
        }
      </div>
    </section>
  )
}

export default Home